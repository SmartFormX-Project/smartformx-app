# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.10.0]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXT_PUBLIC_URL_BASE: ${{ secrets.NEXT_PUBLIC_URL_BASE }}
      OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
      NEXT_PUBLIC_FORM_URL: ${{ secrets.NEXT_PUBLIC_FORM_URL }}
      OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXT_PUBLIC_SECRET: ${{ secrets.NEXT_PUBLIC_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      EMAILSENDER_API_KEY: ${{ secrets.EMAILSENDER_API_KEY }}

    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install Node.js dependencies
      run: |
        npm i -g pnpm
        pnpm i --fix-lockfile
    - name: Load prisma
      run: |
        npx prisma generate
        npx prisma migrate deploy
    - name: Load env
      run: |
        touch .env.local
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.local
        echo "NEXT_PUBLIC_URL_BASE=${{ secrets.NEXT_PUBLIC_URL_BASE }}" >> .env.local
        echo "OPENAI_ORG=${{ secrets.OPENAI_ORG }}" >> .env.local
        echo "NEXT_PUBLIC_FORM_URL=${{ secrets.NEXT_PUBLIC_FORM_URL }}" >> .env.local
        echo "OPENAI_TOKEN=${{ secrets.OPENAI_TOKEN }}" >> .env.local
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.local
        echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env.local
        echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env.local
        echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}" >> .env.local
        echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env.local
        echo "EMAILSENDER_API_KEY=${{ secrets.EMAILSENDER_API_KEY }}" >> .env.local
    - name: Build
      run: pnpm build

    - name: Run and restart project and worker
      run: cd /root/actions-runner/_work/smartformx-app/smartformx-app
    - run: pm2 restart 0
    - run: pm2 restart 1


